---
# This default profile is used when running a single instance completely standalone:
spring:
  profiles: default
server:
  port: 8010  
eureka:
  instance:
    hostname: eurekahost 
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/    

# primary, secondary, and tertiary illustrate running 3 intercommunicating instances.  This example has them running
# side-by-side on localhost -- which is unrealistic in production -- but does illustrate how multiple instances collaborate.
# Run by opening 3 separate command prompts:
# java -jar -Dspring.profiles.active=primary lab-4-eureka-server-solution-1.jar
# java -jar -Dspring.profiles.active=secondary lab-4-eureka-server-solution-1.jar
# java -jar -Dspring.profiles.active=tertiary lab-4-eureka-server-solution-1.jar

---
spring:
  profiles: primary
server:
  port: 8011  
eureka:
  client:
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://eureka-secondary:8012,http://eureka-tertiary:8013

---
spring:
  profiles: secondary
server:
  port: 8012
eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://eureka-tertiary:8013,http://eureka-primary:8011

---
spring:
  profiles: tertiary
server:
  port: 8013
eureka:
  client:
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://eureka-primary:8011,http://eureka-secondary:8012,http://localhost:8010